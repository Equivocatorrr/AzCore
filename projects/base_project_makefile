$(ODIR)/Linux/Debug/%.o: $(SDIR)/%.cpp $(DEPS) $(AZCORE_BASE)/.touchdl
	@mkdir -p $(@D)
	$(CC) -c -o $@ $< -g -rdynamic $(LCFLAGS)

$(ODIR)/Windows/Debug/%.o: $(SDIR)/%.cpp $(DEPS) $(AZCORE_BASE)/.touchdw
	@mkdir -p $(@D)
	$(WCC) -c -o $@ $< -g $(WCFLAGS)

$(ODIR)/Linux/Release/%.o: $(SDIR)/%.cpp $(DEPS) $(AZCORE_BASE)/.touchl
	@mkdir -p $(@D)
	$(CC) -c -o $@ $< -g -O2 $(LCFLAGS) -DNDEBUG

$(ODIR)/Windows/Release/%.o: $(SDIR)/%.cpp $(DEPS) $(AZCORE_BASE)/.touchw
	@mkdir -p $(@D)
	$(WCC) -c -o $@ $< -O2 $(WCFLAGS) -DNDEBUG

.PHONY: clean debugl debugw releasel releasew debug release linux windows all shaders runl runw rundl rundlv rundw rundwv testl testdl testdlv

_AZCORE_DEPS_BASE = basictypes.hpp common.hpp keycodes.hpp keycodes.cpp io.hpp io.cpp math.hpp math.cpp memory.hpp memory.cpp vk.hpp vk.cpp font.hpp font.cpp Font/FontTables.hpp Font/FontTables.cpp Font/font_cff_std_data.c Font/CFF.hpp Font/CFF.cpp Time.hpp Thread.hpp
AZCORE_DEPS_BASE = $(patsubst %,$(AZCORE_BASE)/src/AzCore/%,$(_AZCORE_DEPS_BASE)) makefile
_AZCORE_DEPS_IO = ButtonState.hpp ButtonState.cpp Gamepad.hpp Gamepad.cpp Input.hpp Input.cpp LogStream.hpp LogStream.cpp RawInput.hpp RawInput.cpp Window.hpp
_AZCORE_DEPS_IO_PLATFORM = RawInput.cpp Window.cpp
AZCORE_DEPS_IO_L = $(patsubst %,$(AZCORE_BASE)/src/AzCore/IO/%,$(_AZCORE_DEPS_IO)) $(patsubst %,$(AZCORE_BASE)/src/AzCore/IO/Linux/%,$(_AZCORE_DEPS_IO_PLATFORM))
AZCORE_DEPS_IO_W = $(patsubst %,$(AZCORE_BASE)/src/AzCore/IO/%,$(_AZCORE_DEPS_IO)) $(patsubst %,$(AZCORE_BASE)/src/AzCore/IO/Win32/%,$(_AZCORE_DEPS_IO_PLATFORM))

_AZCORE_DEPS_MATH = Angle.hpp Angle.cpp basic.hpp complex_t.hpp Equations.hpp mat2_t.hpp mat3_t.hpp mat4_t.hpp mat5_t.hpp quat_t.hpp RandomNumberGenerator.hpp RandomNumberGenerator.cpp vec2_t.hpp vec3_t.hpp vec4_t.hpp vec5_t.hpp
AZCORE_DEPS_MATH = $(patsubst %,$(AZCORE_BASE)/src/AzCore/Math/%,$(_AZCORE_DEPS_MATH))

_AZCORE_DEPS_MEMORY = Array.hpp ArrayWithBucket.hpp ArrayList.hpp BigInt.hpp BucketArray.hpp Endian.hpp Endian.cpp List.hpp Ptr.hpp Range.hpp String.hpp String.cpp HashMap.hpp BinaryMap.hpp BinarySet.hpp HashSet.hpp
AZCORE_DEPS_MEMORY = $(patsubst %,$(AZCORE_BASE)/src/AzCore/Memory/%,$(_AZCORE_DEPS_MEMORY))

AZCORE_DEPS_L = $(AZCORE_DEPS_BASE) $(AZCORE_DEPS_IO_L) $(AZCORE_DEPS_MATH) $(AZCORE_DEPS_MEMORY) $(AZCORE_BASE)/src/AzCore/ThreadLinux.hpp
AZCORE_DEPS_W = $(AZCORE_DEPS_BASE) $(AZCORE_DEPS_IO_W) $(AZCORE_DEPS_MATH) $(AZCORE_DEPS_MEMORY) $(AZCORE_BASE)/src/AzCore/ThreadWin32.hpp

$(AZCORE_BASE)/.touchl: $(AZCORE_DEPS_L) $(AZCORE_BASE)/makefile
	$(MAKE) -C $(AZCORE_BASE) releasel

$(AZCORE_BASE)/.touchw: $(AZCORE_DEPS_W) $(AZCORE_BASE)/makefile
	$(MAKE) -C $(AZCORE_BASE) releasew

$(AZCORE_BASE)/.touchdl: $(AZCORE_DEPS_L) $(AZCORE_BASE)/makefile
	$(MAKE) -C $(AZCORE_BASE) debugl

$(AZCORE_BASE)/.touchdw: $(AZCORE_DEPS_W) $(AZCORE_BASE)/makefile
	$(MAKE) -C $(AZCORE_BASE) debugw

debugl: $(OBJ_LD) $(AZCORE_BASE)/.touchdl shaders
	@mkdir -p  $(BDIR)/Linux/Debug
	$(CC) -o $(BDIR)/Linux/Debug/$(APPNAME) $(OBJ_LD) $(AZCORE_OBJ_LD) -g -rdynamic $(LCFLAGS) $(LIBS_L)

debugw: $(OBJ_WD) $(WINDOWS_RESOURCES) $(AZCORE_BASE)/.touchdw shaders
	@mkdir -p $(BDIR)/Windows/Debug
	$(WCC) -o $(BDIR)/Windows/Debug/$(APPNAME).exe $(OBJ_WD) $(WINDOWS_RESOURCES) $(AZCORE_OBJ_WD) -g $(WCFLAGS) $(LIBS_W)

releasel: $(OBJ_L) $(AZCORE_BASE)/.touchl shaders
	@mkdir -p $(BDIR)/Linux/Release
	$(CC) -o $(BDIR)/Linux/Release/$(APPNAME) $(OBJ_L) $(AZCORE_OBJ_L) $(LCFLAGS) $(LIBS_L)

releasew: $(OBJ_W) $(WINDOWS_RESOURCES) $(AZCORE_BASE)/.touchw shaders
	@mkdir -p $(BDIR)/Windows/Release
	$(WCC) -o $(BDIR)/Windows/Release/$(APPNAME).exe $(OBJ_W) $(WINDOWS_RESOURCES) $(AZCORE_OBJ_W) $(WCFLAGS) -mwindows $(LIBS_W)

debug: debugl debugw

release: releasel releasew

linux: releasel debugl

windows: releasew debugw

packl: debugl releasel
	../PackLinux.sh $(APPNAME)

packw: debugw releasew
	../PackWindows.sh $(APPNAME)

data/shaders/%.vert.spv: src/shaders/%.vert
	@mkdir -p $(@D)
	../CompileShaders.sh $^ vert $@

data/shaders/%.frag.spv: src/shaders/%.frag
	@mkdir -p $(@D)
	../CompileShaders.sh $^ frag $@

shaders: $(SHADERS)

runl:
	./bin/Linux/Release/$(APPNAME)

runw:
	wine bin/Windows/Release/$(APPNAME).exe

rundl:
	./bin/Linux/Debug/$(APPNAME)

rundlv:
	./bin/Linux/Debug/$(APPNAME) --validation

rundw:
	wine bin/Windows/Debug/$(APPNAME).exe

rundwv:
	wine bin/Windows/Debug/$(APPNAME).exe --validation

testl: releasel
	./bin/Linux/Release/$(APPNAME) $(INPUT_FILE)

testdl: debugl
	./bin/Linux/Debug/$(APPNAME) $(INPUT_FILE)

testdlv: debugl
	./bin/Linux/Debug/$(APPNAME) --validation

all: debug release

clean:
	rm -r $(ODIR) $(BDIR) Exports
